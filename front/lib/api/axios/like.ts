/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * API documentation
 * OpenAPI spec version: 1.0.0
 */
import type { CountLikes200, LikePost201, UnlikePost200 } from "./generated.schemas"

import { requestSafe } from "../../utils/axios"

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1]

export const countLikes = (postId: number, options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<CountLikes200>({ url: `/api/likes/${postId}/count`, method: "GET" }, options)
}
export const likePost = (postId: number, options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<LikePost201>({ url: `/api/likes/${postId}`, method: "POST" }, options)
}
export const unlikePost = (postId: number, options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<UnlikePost200>({ url: `/api/likes/${postId}`, method: "DELETE" }, options)
}
export type CountLikesResult = NonNullable<Awaited<ReturnType<typeof countLikes>>>
export type LikePostResult = NonNullable<Awaited<ReturnType<typeof likePost>>>
export type UnlikePostResult = NonNullable<Awaited<ReturnType<typeof unlikePost>>>
