/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * API documentation
 * OpenAPI spec version: 1.0.0
 */
import type {
  CreatePost201,
  CreatePostBody,
  DeletePost200,
  GetPostById200,
  ListPosts200,
  ListPostsParams,
  RecordPostView200,
  UpdatePost200,
  UpdatePostBody,
} from "./generated.schemas"

import { requestSafe } from "../../utils/axios"

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1]

export const recordPostView = (id: number, options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<RecordPostView200>({ url: `/posts/${id}/view`, method: "PATCH" }, options)
}
export const listPosts = (params: ListPostsParams, options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<ListPosts200>({ url: `/posts/`, method: "GET", params }, options)
}
export const createPost = (createPostBody: CreatePostBody, options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<CreatePost201>(
    { url: `/posts/`, method: "POST", headers: { "Content-Type": "application/json" }, data: createPostBody },
    options,
  )
}
export const getPostById = (id: number, options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<GetPostById200>({ url: `/posts/${id}`, method: "GET" }, options)
}
export const updatePost = (
  id: number,
  updatePostBody: UpdatePostBody,
  options?: SecondParameter<typeof requestSafe>,
) => {
  return requestSafe<UpdatePost200>(
    { url: `/posts/${id}`, method: "PATCH", headers: { "Content-Type": "application/json" }, data: updatePostBody },
    options,
  )
}
export const deletePost = (id: number, options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<DeletePost200>({ url: `/posts/${id}`, method: "DELETE" }, options)
}
export type RecordPostViewResult = NonNullable<Awaited<ReturnType<typeof recordPostView>>>
export type ListPostsResult = NonNullable<Awaited<ReturnType<typeof listPosts>>>
export type CreatePostResult = NonNullable<Awaited<ReturnType<typeof createPost>>>
export type GetPostByIdResult = NonNullable<Awaited<ReturnType<typeof getPostById>>>
export type UpdatePostResult = NonNullable<Awaited<ReturnType<typeof updatePost>>>
export type DeletePostResult = NonNullable<Awaited<ReturnType<typeof deletePost>>>
