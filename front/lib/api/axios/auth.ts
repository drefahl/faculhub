/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * API documentation
 * OpenAPI spec version: 1.0.0
 */
import type { Login200, LoginBody, Refresh200 } from "./generated.schemas"

import { requestSafe } from "../../utils/axios"

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1]

export const googleLogin = (options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<void>({ url: `/login/google`, method: "GET" }, options)
}
export const login = (loginBody: LoginBody, options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<Login200>(
    { url: `/login`, method: "POST", headers: { "Content-Type": "application/json" }, data: loginBody },
    options,
  )
}
export const getLoginGoogleCallback = (options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<unknown>({ url: `/login/google/callback`, method: "GET" }, options)
}
export const refresh = (options?: SecondParameter<typeof requestSafe>) => {
  return requestSafe<Refresh200>({ url: `/refresh`, method: "GET" }, options)
}
export type GoogleLoginResult = NonNullable<Awaited<ReturnType<typeof googleLogin>>>
export type LoginResult = NonNullable<Awaited<ReturnType<typeof login>>>
export type GetLoginGoogleCallbackResult = NonNullable<Awaited<ReturnType<typeof getLoginGoogleCallback>>>
export type RefreshResult = NonNullable<Awaited<ReturnType<typeof refresh>>>
